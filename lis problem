//# dynamic-programming
#include<bits/stdc++.h>
using namespace std;
int a[1001],dp[1001][1001];
int cal(int n,int x)   ///x is current position and n is position of element to be inserted
{
	if(dp[n][x]!=-1)
	return dp[n][x];
	if(n==0)
	return 0;
	if(a[n-1]<a[x])
	    return dp[n][x]=max(1+cal(n-1,n-1),cal(n-1,x)); 
	else
	    return dp[n][x]=cal(n-1,x);
}
int main()
{
	int t,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(int i=0;i<n;i++)
		cin>>a[i];
		a[n]=INT_MAX;
		memset(dp,-1,sizeof(dp));
		cout<<cal(n,n)<<endl;
	}
}
